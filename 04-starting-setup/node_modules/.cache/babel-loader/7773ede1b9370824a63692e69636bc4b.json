{"ast":null,"code":"var _jsxFileName = \"/home/waibi/projects/lectures/javascript/react-course/04-starting-setup/src/Components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport expense from \"./Expense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState(2019);\n\n  const selectYearChangeHandler = selectedYear => {\n    setSelectedYear(selectedYear);\n    console.log('Expense.js');\n    console.log(selectedYear);\n  };\n\n  const filteredItems = props.items.filter(item => {\n    return item.date;\n  });\n  console.log(filteredItems);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      setYear: selectedYear,\n      onSelectYear: selectYearChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), filteredItems.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      amount: expense.amount,\n      date: expense.date,\n      title: expense.title\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"XkD5s/Oevvv2BZZBZ94TFHixI/8=\");\n\n_c = Expenses;\nexport default Expenses;\n/*\n* Make the filter work\n* when a year is selected show only items for that year.\n* use filter method;\n*\n*\n*\n*\n*\n* */\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/waibi/projects/lectures/javascript/react-course/04-starting-setup/src/Components/Expenses/Expenses.js"],"names":["useState","Card","ExpensesFilter","ExpenseItem","expense","Expenses","props","selectedYear","setSelectedYear","selectYearChangeHandler","console","log","filteredItems","items","filter","item","date","map","amount","title","id"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;;AACA,QAAMS,uBAAuB,GAAIF,YAAD,IAAkB;AAC9CC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACH,GAJD;;AAMA,QAAMK,aAAa,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAQ;AAC7C,WAAOA,IAAI,CAACC,IAAZ;AAEH,GAHqB,CAAtB;AAIAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEL,YAAzB;AAAuC,MAAA,YAAY,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQG,aAAa,CAACK,GAAd,CACIb,OAAO,iBAAI,QAAC,WAAD;AAEP,MAAA,MAAM,EAAEA,OAAO,CAACc,MAFT;AAGP,MAAA,IAAI,EAAEd,OAAO,CAACY,IAHP;AAIP,MAAA,KAAK,EAAEZ,OAAO,CAACe;AAJR,OACFf,OAAO,CAACgB,EADN;AAAA;AAAA;AAAA;AAAA,YADf,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;GAAMf,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {useState} from \"react\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css'\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport expense from \"./Expense\";\n\nconst Expenses = (props) => {\n    const [selectedYear, setSelectedYear] = useState(2019);\n    const selectYearChangeHandler = (selectedYear) => {\n        setSelectedYear(selectedYear);\n        console.log('Expense.js')\n        console.log(selectedYear);\n    };\n\n    const filteredItems = props.items.filter((item)=>{\n        return item.date;\n\n    });\n    console.log(filteredItems);\n\n    return (\n        <Card className=\"expenses\">\n            <ExpensesFilter setYear={selectedYear} onSelectYear={selectYearChangeHandler}/>\n            {\n                filteredItems.map(\n                    expense => <ExpenseItem\n                        key={expense.id}\n                        amount={expense.amount}\n                        date={expense.date}\n                        title={expense.title}/>\n                )\n            }\n        </Card>\n    );\n}\n\nexport default Expenses;\n/*\n* Make the filter work\n* when a year is selected show only items for that year.\n* use filter method;\n*\n*\n*\n*\n*\n* */\n"]},"metadata":{},"sourceType":"module"}